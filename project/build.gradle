plugins {
   id 'java'
   }

java {
    sourceCompatibility = JavaVersion.toVersion(11)
        targetCompatibility = JavaVersion.toVersion(11)
	}

repositories {
    mavenCentral()
    }

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
	}


test {
     ignoreFailures = true
     useJUnitPlatform()
}

/*reportStats {
    reportsURL = 'https://old-dominion-univ-cs-dept.github.io/cs350-ci-asst-andrew153d/'
    htmlSourceDir = file('src/main/html')
    reportsDir = file('build/reports')
}*/
javadoc {
   options.with {
     links 'https://docs.oracle.com/javase/8/docs/api/', 'gradle/javadocs/jdk'
   }
   failOnError = false;
}

task reports (dependsOn: ['javadoc', 'test']) {
   doLast() {
      copy {
         from(file('build/docs'))
         into(file('build/reports'))
      }
   
      copy {
         from(file('src/main/html'))
         into(file('build/reports'))
	  }
   }
}

task deployReports (dependsOn: 'reports') {

	doLast {
	
		copy {
         from(file('build/reports/index.md'))
         into(file('build/gh-pages'))
		}
      copy {
         from(file('build/reports'))
         into(file('build/gh-pages/reports'))
		}
	  
		def pagesDir = "$buildDir/gh-pages"
		exec {
			workingDir = pagesDir
			commandLine = ['git', 'add', '.']
		}
		exec {
			workingDir = pagesDir
			commandLine = ['git', 'commit', '-m', 'Updating-webpages']
		}
		exec {
			workingDir = pagesDir
			commandLine = ['git', 'push']
		}
	}
}